name: Update Games Calendar

on:
  push:
    branches:
      - master
  schedule:
    - cron: "*/10 * * * *"


concurrency:
  group: deployment
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-22.04
    steps:
      - name: disable quotePath
        run: git config --global core.quotePath false

      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: '23'

      - name: Install Dependencies
        run: npm install

      - name: Update Data
        env:
          CI_ENV: ci
          STEAM_APIKEY: ${{ secrets.STEAM_APIKEY }}
        run: |
          set -x
          git fetch origin release
          git checkout origin/release -- events.json wishlist.txt wishlist.json owned.txt owned.json meta.json
          node ./run.js
          git status

      - name: add changed files
        run: |
          set -x
          git config --local user.name actions-user
          git config --local user.email "actions@github.com"
          git fetch origin master
          
          git status
          git stash -- events.json wishlist.txt wishlist.json owned.txt owned.json meta.json
          git status

          git checkout HEAD -- package-lock.json
          git status
          
          git checkout release
          git status
          git stash show
          git checkout stash@{0} events.json wishlist.txt wishlist.json owned.txt owned.json meta.json
          
          # idk why but git 2.43 will raise an error says `fatal: '--merge', '--ours', or '--theirs' cannot be used when checking out of a tree` 
          # git checkout stash@{0} --theirs events.json wishlist.txt wishlist.json owned.txt owned.json meta.json
          git checkout master -- static.json override.json index.html float.css favicon.svg
          git status

      - name: commit
        run: |
          set +x
          if ! git diff --exit-code --cached; then
            set -x
            last_commit_message="$(git log -1 --pretty=%s)"

            if [[ "$last_commit_message" == "Daily update"* ]]; then
                git commit --amend --no-edit -s
                
                git push origin release -f
            else
              git commit -am "Daily update"
              git push origin release
            fi
          fi
